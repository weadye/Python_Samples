import numpy as np

# 通过索引访问二维数组某一行或某个元素
arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print(arr[2])  # [7 8 9]
print(arr[0][2])  # 3
print(arr[0, 2])  # 3 普通python数组不能用
print('')

# 对更高维数组的访问和操作
arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])
print(arr[0])  # 结果是个二维数组
'''
[[1 2 3]
 [4 5 6]]
 '''
print(arr[1, 0])  # 结果是个一维数组: [7 8 9]
old_values = arr[0].copy()
arr[0] = 42
print(arr)
'''
[[[42 42 42]  [42 42 42]]
 [[ 7  8  9]  [10 11 12]]]
'''
arr[0] = old_values
print(arr)
'''
[[[ 1  2  3]  [ 4  5  6]]
[[ 7  8  9]  [10 11 12]]]
'''
print('')

# 使用切片访问和操作数组
arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
print(arr[1:6])  # [2 3 4 5 6] 打印arr[1]到arr[5]，和list切片不同，这里是引用。
arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print(arr[:2])  # [[1 2 3] [4 5 6]] 打印第1、2行
print(arr[:2, 1:])  # [[2 3] [5 6]]打印第1、2行，第2、3列
print(arr[:, :1])  # [[1] [4] [7]]打印第1列所有元素
arr[:2, 1:] = 0  # 第1、2行，第2、3列的元素设置为0
print(arr)  # [[1 0 0] [4 0 0] [7 8 9]]
